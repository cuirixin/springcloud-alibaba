server:
  port: 8003
spring:
  application:
    name: service-order
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.33.10:3306/test?useSSL=false&useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true
    username: root
    password: root
  cloud:
    # 服务注册发现
    nacos:
      discovery:
        server-addr: 192.168.33.10:8848
    # 熔断与监控
    sentinel:
      filter:
        #打开/关闭掉对Spring MVC端点的保护
        enabled: true
      transport:
        port: 9990 # 跟控制台交流的端口，自定义
        dashboard: 192.168.33.10:8080 # 指定控制台服务地址, 记住必须是8080

#添加sentinel依赖后 暴露/actuator/sentinel端点可校验sentinel是否配置成功
management:
  endpoints:
    web:
      exposure:
        include: '*'

# 负载均衡
service-product:
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.ZoneAvoidanceRule


####### Database #######
mybatis:
  config-location: classpath:mybatis/mybatis.cfg.xml
  type-aliases-package: com.phoenix.model
  mapper-locations: classpath:mybatis/mapper/*Mapper.xml
# 分页 https://pagehelper.github.io/docs/howtouse/
pagehelper:
  auto-dialect: mysql # 分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。你也可以配置helperDialect属性来指定分页插件使用哪种方言。
  reasonable: true # 分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页， pageNum>pages（超过总数时），会查询最后一页。默认false 时，直接根据参数进行查询。
  support-methods-arguments: true # 默认值false，分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页
  params: count=countSql # 用于从对象中根据属性名取值， 可以配置 pageNum,pageSize,count,pageSizeZero,reasonable，不配置映射的用默认值， 默认值为pageNum=pageNum;pageSize=pageSize;count=countSql;reasonable=reasonable;pageSizeZero=pageSizeZero


# 开启sentinel支持
feign:
  sentinel:
    enabled: true

# RocketMQ
rocketmq:
  name-server: 192.168.33.10:9876
  producer:
    group: servier-order # 生产者组